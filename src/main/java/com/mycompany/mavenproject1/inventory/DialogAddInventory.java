/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.mavenproject1.inventory;

import com.mycompany.mavenproject1.apiclient.ApiClient;
import com.mycompany.mavenproject1.apiclient.products.AddStockRequest;
import com.mycompany.mavenproject1.apiclient.products.ProductsResponse;
import com.mycompany.mavenproject1.sqlite.SQLiteJDBC;
import com.mycompany.mavenproject1.utils.StyledButtonUI;
import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import okhttp3.ResponseBody;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

/**
 *
 * @author User
 */
public class DialogAddInventory extends javax.swing.JDialog {

    /**
     * Creates new form DialogAddInventory
     *
     * @param parent
     * @param modal
     */
    public DialogAddInventory(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        datePicker1.setEnabled(false);
        lblIdProduct.setVisible(false);

        txtQuantity.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                warn();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                warn();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                warn();
            }

            public void warn() {
                try {
                    if (Integer.parseInt(txtQuantity.getText()) <= 0) {
                        JOptionPane.showMessageDialog(null,
                                "Error: Please enter number bigger than 0", "Error Massage",
                                JOptionPane.ERROR_MESSAGE);
                    } else if (Integer.parseInt(txtQuantity.getText()) > 0) {
                        lblTotal.setText(String.format("$%,.2f", (Double.valueOf(txtCostPrice.getText()) * Integer.valueOf(txtQuantity.getText()))));
                    }
                } catch (NumberFormatException e) {
                    lblTotal.setText("$0.00");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodeProduct = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCostPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSalePrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSalePrice1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSalePrice2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        lblIdProduct = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Agregar inventario:");
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N

        jLabel2.setText("Buscar:");
        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        txtQuantity.setFont(new java.awt.Font("SansSerif", 0, 17)); // NOI18N

        btnSearch.setText("Buscar");
        btnSearch.setBackground(new java.awt.Color(0, 166, 237));
        btnSearch.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setMaximumSize(new java.awt.Dimension(95, 40));
        btnSearch.setMinimumSize(new java.awt.Dimension(95, 40));
        btnSearch.setPreferredSize(new java.awt.Dimension(95, 40));
        btnSearch.setUI(new StyledButtonUI());
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre:");
        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        lblName.setText("-");
        lblName.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        jLabel4.setText("Hay:");
        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        lblStock.setText("-");
        lblStock.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        jLabel5.setText("Cantidad:");
        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        txtCodeProduct.setFont(new java.awt.Font("SansSerif", 0, 17)); // NOI18N
        txtCodeProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeProductActionPerformed(evt);
            }
        });

        jLabel6.setText("Precio costo:");
        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        txtCostPrice.setFont(new java.awt.Font("SansSerif", 0, 17)); // NOI18N
        txtCostPrice.setEditable(false);

        jLabel7.setText("Precio venta:");
        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        txtSalePrice.setFont(new java.awt.Font("SansSerif", 0, 17)); // NOI18N
        txtSalePrice.setEditable(false);

        jLabel8.setText("Precio dinámico:");
        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        txtSalePrice1.setFont(new java.awt.Font("SansSerif", 0, 17)); // NOI18N
        txtSalePrice1.setEditable(false);

        jLabel9.setText("Precio mayoreo:");
        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        txtSalePrice2.setFont(new java.awt.Font("SansSerif", 0, 17)); // NOI18N
        txtSalePrice2.setEditable(false);

        jLabel10.setText("Total:");
        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        lblTotal.setText("$0.00");
        lblTotal.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        btnAdd.setText("Agregar");
        btnAdd.setBackground(new java.awt.Color(0, 166, 237));
        btnAdd.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setMaximumSize(new java.awt.Dimension(95, 40));
        btnAdd.setMinimumSize(new java.awt.Dimension(95, 40));
        btnAdd.setPreferredSize(new java.awt.Dimension(95, 40));
        btnAdd.setUI(new StyledButtonUI());
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jCheckBox1.setText("¿Nuevo lote?");
        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Fecha de caducidad:");
        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        datePicker1.setFont(new java.awt.Font("SansSerif", 0, 17)); // NOI18N
        datePicker1.setMinimumSize(new java.awt.Dimension(174, 30));
        datePicker1.setPreferredSize(new java.awt.Dimension(174, 30));

        lblIdProduct.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtCodeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(lblIdProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addGap(88, 88, 88)
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addGap(125, 125, 125)
                        .addComponent(lblStock, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addGap(82, 82, 82)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6)
                        .addGap(53, 53, 53)
                        .addComponent(txtCostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(12, 12, 12)
                        .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7)
                        .addGap(49, 49, 49)
                        .addComponent(txtSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)
                        .addGap(20, 20, 20)
                        .addComponent(txtSalePrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(383, 383, 383)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSalePrice2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(txtCodeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblIdProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lblName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(lblStock))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox1))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtCostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel11))
                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7))
                    .addComponent(txtSalePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel8))
                    .addComponent(txtSalePrice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel9))
                    .addComponent(txtSalePrice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(lblTotal))
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            datePicker1.setEnabled(true);
        } else {
            datePicker1.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        btnAdd.setBackground(Color.GRAY);
        btnAdd.setEnabled(false);
        if (!txtQuantity.getText().equals("") && !lblIdProduct.getText().equals("")) {
            SQLiteJDBC sqlite = new SQLiteJDBC();
            String token = sqlite.getToken();
            Integer userId = sqlite.getUserId();
            Integer boxId = sqlite.getBoxId();

            AddStockRequest addStockRequest = new AddStockRequest();
            addStockRequest.setUserId(userId);
            addStockRequest.setBoxId(boxId);
            // TODO: add person when necessary
            addStockRequest.setPersonId(1);
            addStockRequest.setProductId(Integer.valueOf(lblIdProduct.getText()));
            addStockRequest.setQuantity(Integer.valueOf(txtQuantity.getText()));
            addStockRequest.setDateExpiry(null);
            if (jCheckBox1.isSelected()) {
                LocalDate pickerDate = datePicker1.getDate();
                DateTimeFormatter iso_8601_formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                addStockRequest.setDateExpiry(pickerDate.format(iso_8601_formatter) + " 00:00:00");
            }

            Call<ResponseBody> restockResponseCall = ApiClient.getProductService().addStock(addStockRequest, "Bearer " + token);
            restockResponseCall.enqueue(new Callback<ResponseBody>() {
                @Override
                public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {
                    if (response.isSuccessful()) {
                        JOptionPane.showMessageDialog(null, "Se agregó " + txtQuantity.getText() + " productos a " + lblName.getText() + " exitosamente", "Agregar inventario", JOptionPane.INFORMATION_MESSAGE);
                        btnAdd.setBackground(new java.awt.Color(0, 166, 237));
                        btnAdd.setEnabled(true);

                        jCheckBox1.setSelected(false);
                        datePicker1.setDate(null);
                        datePicker1.setEnabled(false);
                        txtCodeProduct.setText("");
                        txtQuantity.setText("");
                        lblIdProduct.setText("");
                        lblName.setText("-");
                        lblStock.setText("-");
                        txtCostPrice.setText("");
                        txtSalePrice.setText("");
                        txtSalePrice1.setText("");
                        txtSalePrice2.setText("");
                        lblTotal.setText("$0.00");
                    }
                }

                @Override
                public void onFailure(Call<ResponseBody> call, Throwable t) {
                    System.out.println(t.getLocalizedMessage());
                }
            });
        } else {
            btnAdd.setBackground(new java.awt.Color(0, 166, 237));
            btnAdd.setEnabled(true);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        searchProduct();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtCodeProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeProductActionPerformed
        // TODO add your handling code here:
        searchProduct();
    }//GEN-LAST:event_txtCodeProductActionPerformed

    private void searchProduct() {
        btnSearch.setBackground(Color.GRAY);
        btnSearch.setEnabled(false);
        if (!txtCodeProduct.getText().equals("")) {
            SQLiteJDBC sqlite = new SQLiteJDBC();
            String token = sqlite.getToken();
            Call<ProductsResponse> productResponseCall = ApiClient.getProductService().getProductByBarcodeWithQuantity(txtCodeProduct.getText(), "Bearer " + token);
            productResponseCall.enqueue(new Callback<ProductsResponse>() {
                @Override
                public void onResponse(Call<ProductsResponse> call, Response<ProductsResponse> response) {
                    if (response.isSuccessful()) {
                        ProductsResponse product = response.body();
                        if (product != null) {
                            lblIdProduct.setText(String.valueOf(product.getId()));
                            lblName.setText(product.getName());
                            lblStock.setText(product.getStock() == null ? "0.00" : product.getStock().toString());
                            txtCostPrice.setText(product.getPriceIn().toString());
                            txtSalePrice.setText(product.getPriceOut1().toString());
                            txtSalePrice1.setText(product.getPriceOut2() == null ? "0.00" : product.getPriceOut2().toString());
                            txtSalePrice2.setText(product.getPriceOut3() == null ? "0.00" : product.getPriceOut3().toString());
                        }
                    } else {
                        txtCodeProduct.requestFocusInWindow();
                        jCheckBox1.setSelected(false);
                        datePicker1.setDate(null);
                        datePicker1.setEnabled(false);
                        txtCodeProduct.setText("");
                        txtQuantity.setText("");
                        lblIdProduct.setText("");
                        lblName.setText("-");
                        lblStock.setText("-");
                        txtCostPrice.setText("");
                        txtSalePrice.setText("");
                        txtSalePrice1.setText("");
                        txtSalePrice2.setText("");
                        lblTotal.setText("$0.00");
                        JOptionPane.showMessageDialog(null, "El producto no existe", "Agregar inventario", JOptionPane.ERROR_MESSAGE);
                    }
                    btnSearch.setBackground(new java.awt.Color(0, 166, 237));
                    btnSearch.setEnabled(true);
                }

                @Override
                public void onFailure(Call<ProductsResponse> call, Throwable t) {
                    System.out.println(t.getLocalizedMessage());
                }
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogAddInventory.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogAddInventory.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogAddInventory.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogAddInventory.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DialogAddInventory dialog = new DialogAddInventory(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSearch;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblIdProduct;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextField txtCodeProduct;
    private javax.swing.JTextField txtCostPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSalePrice;
    private javax.swing.JTextField txtSalePrice1;
    private javax.swing.JTextField txtSalePrice2;
    // End of variables declaration//GEN-END:variables
}
